@page "/vendas"
@inject HttpClient http
@inject NavigationManager navigation
@inject IJSRuntime js

<header>
    <h1 class="title">Vendas</h1>
    <a class="btn" href="/vendas/adicao">Adicionar <i class="fa-solid fa-plus"></i></a>
</header>

@if (Vendas is null) {
    <Reload />
}
else if (!Vendas.Any()) {
    <p>Não foram encontrados registros.</p>
}
else {
    <table>
        <thead>
            <th>ID</th>
            <th>Cliente</th>
            <th>Data de Agendamento</th>
            <th>Data de Emissão</th>
            <th>Valor Total</th>
            <th>Status</th>
            <th></th>

        </thead>

        <tbody>
            @foreach (var venda in Vendas) {
                <tr>
                    <td class="td-id">@venda.ID</td>
                    <td>@venda.Cliente.Nome</td>
                    <td>@venda.DataAgendamento</td>
                    <td>@venda.DataEmissao</td>
                    <td>@venda.ValorTotal().Formatado()</td>
                    <td>@if(@venda.Status == 1){
                            <span class="agendamento"><i class="fa-sharp fa-solid fa-circle"></i></span>
                        }
                        else if (@venda.Status == 2){
                            <span class="andamento"><i class="fa-sharp fa-solid fa-circle"></i></span>
                        }
                        else if (@venda.Status == 3){
                            <span class="finalizado"><i class="fa-sharp fa-solid fa-circle"></i></span>
                        }
                        
                        </td>
                    <td><a href="/vendas/edicao/@venda.ID" class="link-info"><i class="fa-solid fa-gear gear"></i></a></td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <p class="text-vendastotal text-end">Total de registros: <span class="quantidade-vendas">@Vendas.Count().ToString("00")</span></p>
    </div>
}

@code {
    public List<Venda> Vendas { get; set; }
    [Parameter]public int ID { get; set; }
    public Venda Venda { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Pesquisar();
    }

    async Task Pesquisar()
    {
        var url = $"{navigation.BaseUri}api/vendas/GetVendas";
        Vendas = await http.GetFromJsonAsync<List<Venda>>(url);
    }
    
    
}

