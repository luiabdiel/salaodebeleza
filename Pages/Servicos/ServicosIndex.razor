@page "/servicos"
@using salaodebeleza.Helpers
@inject HttpClient http
@inject NavigationManager navigation


<div class="header">
    <h1 class="title">Serviços e Produtos</h1>
        <a class="btn btn-adicionar" href="/servicos/adicao">Adicionar<i class="fa-solid fa-plus"></i></a>
</div>
@if (Servicoes is null)
{
    <Reload />
}
else if (!Servicoes.Any())
{
    <p>Não foram encontrados registros.</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-3">
        @foreach (var servico in Servicoes){
            <div class="col mb-4 cards">
                <div class="card">
                    <img src="https://cdn-icons-png.flaticon.com/512/3220/3220315.png">
                    <div class="card-body">
                        <h2>@servico.Descricao</h2>
                        @if(servico.Tipo == 1) {
                            <p class="tipo-produto">Produto</p>
                        }
                        else if (servico.Tipo == 2) {
                            <p class="tipo-servico">Serviço</p>
                        } else {
                            <p>Vazio</p>
                        }
                        <p class="card-text">Preço: <span class="text-price">@servico.Preco.Formatado()</span></p>
                        <a class="btn btn-editar" href="/servicos/edicao/@servico.ID">Editar<i class="fa-solid fa-gear gear"></i></a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    public List<Servico> Servicoes { get; set; }

    public int ID { get; set; }
    public double Preco { get; set; }
    public string Descricao { get; set; }
    public int Tipo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Pesquisar();
    }

    async Task Pesquisar()
    {
        var url = $"{navigation.BaseUri}api/servicos/GetServicos";
        Servicoes = await http.GetFromJsonAsync<List<Servico>>(url);
    }
}
